library(shiny); runApp('calc_R.R')
# Instale o pacote shiny, caso ainda não esteja instalado
if (!require(shiny)) install.packages("shiny")
library(shiny)
# Define a interface do usuário (UI)
ui <- fluidPage(
titlePanel("Calculadora de Mão"),
fluidRow(
column(12, align = "center",
h3("Calculadora"),
textOutput("display"),
br()
)
),
fluidRow(
column(4, offset = 4, align = "center",
actionButton("btn1", "1"), actionButton("btn2", "2"), actionButton("btn3", "3"), br(),
actionButton("btn4", "4"), actionButton("btn5", "5"), actionButton("btn6", "6"), br(),
actionButton("btn7", "7"), actionButton("btn8", "8"), actionButton("btn9", "9"), br(),
actionButton("btn0", "0"), actionButton("btnC", "C"), actionButton("btnEq", "="), br(),
actionButton("btnAdd", "+"), actionButton("btnSub", "-"), actionButton("btnMul", "*"), br(),
actionButton("btnDiv", "/"), actionButton("btnPow", "^")
)
)
)
# Define a lógica do servidor
server <- function(input, output, session) {
calc_string <- reactiveVal("") # String para armazenar a expressão atual
observeEvent(input$btn1, { calc_string(paste0(calc_string(), "1")) })
observeEvent(input$btn2, { calc_string(paste0(calc_string(), "2")) })
observeEvent(input$btn3, { calc_string(paste0(calc_string(), "3")) })
observeEvent(input$btn4, { calc_string(paste0(calc_string(), "4")) })
observeEvent(input$btn5, { calc_string(paste0(calc_string(), "5")) })
observeEvent(input$btn6, { calc_string(paste0(calc_string(), "6")) })
observeEvent(input$btn7, { calc_string(paste0(calc_string(), "7")) })
observeEvent(input$btn8, { calc_string(paste0(calc_string(), "8")) })
observeEvent(input$btn9, { calc_string(paste0(calc_string(), "9")) })
observeEvent(input$btn0, { calc_string(paste0(calc_string(), "0")) })
observeEvent(input$btnAdd, { calc_string(paste0(calc_string(), "+")) })
observeEvent(input$btnSub, { calc_string(paste0(calc_string(), "-")) })
observeEvent(input$btnMul, { calc_string(paste0(calc_string(), "*")) })
observeEvent(input$btnDiv, { calc_string(paste0(calc_string(), "/")) })
observeEvent(input$btnPow, { calc_string(paste0(calc_string(), "^")) })
observeEvent(input$btnC, { calc_string("") }) # Limpar expressão
observeEvent(input$btnEq, {
# Avaliar a expressão quando "=" for pressionado
tryCatch({
result <- eval(parse(text = calc_string()))
calc_string(as.character(result))
}, error = function(e) {
calc_string("Erro")
})
})
output$display <- renderText({
calc_string()
})
}
# Rodar a aplicação Shiny
shinyApp(ui = ui, server = server)
runApp('calc_R.R')
runApp('calc_R.R')
